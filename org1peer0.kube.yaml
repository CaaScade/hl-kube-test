apiVersion: v1
kind: Service
metadata:
  name: peer0
  namespace: hltest
spec:
  ports:
  - name: "7050"
    port: 7050
    protocol: TCP
  - name: "7051"
    port: 7051
    protocol: TCP
  - name: "7052"
    port: 7052
    protocol: TCP
  - name: "7053"
    port: 7053
    protocol: TCP
  selector:
    app: org1peer0
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: org1peer0
  namespace: hltest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org1peer0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: org1peer0
    spec:
      containers:
      - command:
        - peer
        - node
        - start
        env:
        - name: CORE_VM_ENDPOINT
          value: http://localhost:2375
        - name: CORE_PEER_ID
          value: peer0
        - name: CORE_PEER_ADDRESS
          value: peer0:7051
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_LOGGING_LEVEL
          value: DEBUG
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: localhost:7052
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        image: hyperledger/fabric-peer:x86_64-1.1.0-alpha
        name: org1peer0
        ports:
        - containerPort: 7051
          protocol: TCP
        - containerPort: 7053
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/hyperledger/fabric
          mountPropagation: ""
          name: config
        - mountPath: /etc/hyperledger/fabric/msp
          mountPropagation: ""
          name: msp-target
        - mountPath: /etc/hyperledger/fabric/tls
          mountPropagation: ""
          name: tls-target
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
      - image: docker:dind
        name: dind
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          mountPropagation: ""
          name: docker-graph-storage
      initContainers:
      - command:
        - sh
        - -c
        - |
          set -e
          set -x
          cd /target
          tar -xvf /msp-source/msp.tar.gz
          tar -xvf /tls-source/tls.tar.gz
        image: ubuntu:16.04
        name: tar
        volumeMounts:
        - mountPath: /target/msp
          mountPropagation: ""
          name: msp-target
        - mountPath: /target/tls
          mountPropagation: ""
          name: tls-target
        - mountPath: /msp-source
          mountPropagation: ""
          name: msp-config
        - mountPath: /tls-source
          mountPropagation: ""
          name: tls-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          items:
          - key: file
            path: core.yaml
          name: core-yaml
        name: config
      - emptyDir: {}
        name: docker-graph-storage
      - name: msp-config
        secret:
          items:
          - key: bundle
            path: msp.tar.gz
          secretName: peer0-org1-msp
      - emptyDir: {}
        name: msp-target
      - name: tls-config
        secret:
          items:
          - key: bundle
            path: tls.tar.gz
          secretName: peer0-org1-tls
      - emptyDir: {}
        name: tls-target

