pod:
  namespace: hltest
  name: orderer
  containers:
  - name: orderer
    image: 693838464287.dkr.ecr.us-east-1.amazonaws.com/test-bundle-orderer
    env:
    - ORDERER_GENERAL_LOGLEVEL=debug
    - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    - ORDERER_GENERAL_GENESISMETHOD=file
    - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
    - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
    # enabled TLS
    - ORDERER_GENERAL_TLS_ENABLED=true
    - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
    - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
    - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    wd: /opt/gopath/src/github.com/hyperledger/fabric
    command:
    - orderer
    expose:
    - 7050
    volume:
    - mount: /var/hyperledger/orderer
      store: crypto-config
  termination_grace_period: 10
  restart_policy: never
  volumes:
    crypto-config:
      vol_type: projected
      sources:
      - config: admin-example-com-cert
        items:
          msp/admincerts/Admin@example.com-cert.pem: cert
      - config: ca-example-com-cert
        items:
          msp/cacerts/ca.example.com-cert.pem: cert
      - secret: orderer-example-com-sk
        items:
          msp/keystore/orderer_sk: sk
      - config: orderer-example-com-cert
        items:
          msp/signcerts/orderer.example.com-cert.pem: cert
      - config: tlsca-example-com-cert
        items:
          msp/tlscacerts/tlsca.example.com-cert.pem: cert
      - config: tlsca-example-com-cert
        items:
          tls/ca.crt: cert
      - config: orderer-example-com-tls-cert
        items:
          tls/server.crt: cert
      - secret: orderer-example-com-tls-sk
        items:
          tls/server.key: sk
      - secret: orderer-example-com-genesis-block
        items:
          orderer.genesis.block: block

